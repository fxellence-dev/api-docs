openapi: 3.0.0
info:
  title: FXellence Payment APIs v2.0
  version: 1.0.0
  description: "\n\n## Overview\n\nFXellence Payment APIs are used by the online application and/or clients to integrate with the FXellence backend systems for processing international payment transfers. All APIs are follow Oauth2 security standards to protect API resources and data. There are 2 types of authentication tokens can be use to call the APIs:\n 1) User Auth Token, These tokens are available for all users who has registered with FXellence,\n 2) Service Token, these tokens can be generated by using client credentials which can be obtain by contacting support@fxellence.com. \n\n### How to test our APIs\n\nFollowing workflow describes the steps of calling the APIs:"
  contact:
    name: Support
    email: support@fxellence.com
    url: 'https://www.fxellence.com/support'
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: https://www.fxellence.com/terms
servers:
  - url: 'https://api.fxellence.com'
    description: Production
  - description: Development
    url: 'https://dev-api.fxellence.com'
paths:
  /fx_quote/v2/api/currency/active/list:
    get:
      summary: Get All Active Currencies
      tags:
        - Currencies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Currency'
              examples:
                Example User:
                  $ref: '#/components/examples/currency'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: currency-list
      description: |-
        Get list of active currencies with meta data like currency symbol, description, decimal digits along with county code and system parameters like buy and sell flag etc.
      security:
        - bearerAuth: []
  /fx_quote/v2/api/quote/create:
    post:
      summary: Create FX Quote
      tags:
        - Quote
      operationId: fxquote-create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFxQuoteRequest'
            examples:
              FX Quote Outgoing Wire examples:
                $ref: '#/components/examples/CreateFxQuoteExample'
      responses:
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/BadRequest'

      description: |-
        Create FX quote API calculate the FX rate for given product and market by providing sell & buy currency, fixed side and amount. Delivery date will be optional. Quote will be created based on the live market rate (subject to buy/payment currency trading hours), FXellence spread and fee will be added to the total cost. Single transaction limit check, expiry calculation will also be done during the quote creation.
      security:
        - bearerAuth: []

  /fx-rate/v2/public/api/rate/{base_currency_code}:
    get:
      summary: Get Market Rate
      operationId: currency-rate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rate'
              examples:
                Example User:
                  $ref: '#/components/examples/rate'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Choose base currency and the endpoint will return the conversion rates from your base currency code to all the other active currencies
      parameters:
        - name: base_currency_code
          in: path
          required: true
          schemas:
            type: string
          description: ISO code for base currency
      tags:
        - FX Rate
      security:
        - Service Key: []
  /fx-rate/v2/api/conversions/create:
    post:
      summary: Create Rate Conversion
      operationId: create-rate-conversion
      responses:
        '201':
          description: Conversion Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conversion'
              examples:
                Example Conversion:
                  $ref: '#/components/examples/Conversion'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Get a detailed, tradable rate quote to convert money from one currency to another
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversionReq'
            examples:
              Example Conversion requestBody:
                $ref: '#/components/examples/conversionReq'
      tags:
        - FX Rate
      security:
        - Auth Token: []
  /fx-rate/v2/api/rate/user/{fx_user_id}/alert/list:
    get:
      summary: List Rate Alerts
      tags:
        - FX Rate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RateAlert'
              examples:
                Example User:
                  $ref: '#/components/examples/ListRateAlert'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: alert-list
      description: |-
        Get the list of fx-rate alerts (active or disabled) available for a fx-user
      parameters:
        - name: fx_user_id
          in: path
          required: true
          schemas:
            type: string
          description: fx_user_id is a unique id that represent client's user
      security:
        - Service Key: []
  /fx-rate/v2/api/rate/alert/{alert_id}:
    get:
      summary: Get Rate Alert
      tags:
        - FX Rate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAlert'
              examples:
                Example User:
                  $ref: '#/components/examples/RateAlert'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: rate-alert
      description: |-
        Get the fx-rate alert (active or disabled)
      parameters:
        - name: alert_id
          in: path
          required: true
          schemas:
            type: string
          description: alert_id is a unique id that represent alert object
      security:
        - Service Key: []
  /fx-rate/v2/api/rate/alert/create:
    post:
      summary: Create Rate Alert
      tags:
        - FX Rate
      responses:
        '201':
          description: Rate Alert Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAlertCreateRes'
              examples:
                Example User:
                  $ref: '#/components/examples/RateAlertCreateResExample'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateAlertCreateReq'
            examples:
              Example Conversion requestBody:
                $ref: '#/components/examples/RateAlertCreateReqExample'
      operationId: create-rate-alert
      description: |-
        Create fx rate alert for an fs user
      security:
        - Service Key: []
  /fx-rate/v2/api/rate/alert/{alert_id}/delete:
    delete:
      summary: Delete Rate Alert
      tags:
        - FX Rate
      responses:
        '204':
          description: No Content (Alert deleted)
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: delete-rate-alert
      description: |-
        Delete fx-rate alert
      parameters:
        - name: alert_id
          in: path
          required: true
          schemas:
            type: string
          description: alert_id is a unique id that represent alert object
      security:
        - Service Key: []
  /fx-rate/v2/api/rate/alert/update:
    put:
      summary: Update Rate Alert
      tags:
        - FX Rate
      responses:
        '201':
          description: Rate Alert Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RateAlert'
              examples:
                Example User:
                  $ref: '#/components/examples/RateAlert'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateAlertUpdateReq'
            examples:
              Example Conversion requestBody:
                $ref: '#/components/examples/RateAlertUpdateReqExample'
      operationId: update-rate-alert
      description: |-
        Update fx-rate alert
      security:
        - Service Key: []

components:
  schemas:
    Rate:
      description: The exchange rates from base currency code to all the other currencies
      type: object
      title: Rate
      properties:
        result:
          type: string
          description: Successful fetch from the backend systems
        time_last_update_utc:
          type: string
          description: last fetch time for the market rates
        base_code:
          type: string
          description: ISO currency code for base currency
        conversion_rates:
          type: object
          description: list of currency code and corresponding market rate against the base currency
    Currency:
      description: Currency schema
      type: object
      title: Currencies
      properties:
        code:
          type: string
          description: ISO Currency code
        name:
          type: string
          description: Currency name
        name_plural:
          type: string
          description: Currency in plural
        symbol:
          type: string
          description: Currency symbol
        decimal_digits:
          type: string
        rounding:
          type: string
        country_code:
          type: sting
          description: ISO Country Code
        base_currency_flag:
          type: boolean
          description: flag to indicate whether currency is a base currency ot not (base currencies can be used in "send currency or from currency field")
        active_currency_flag:
          type: boolean
          description: flag to indicate whether currency is available
        top_currency_flag:
          type: boolean
          description: To show in the top currency list
    CreateFxQuoteRequest:
      description: Request body for create fx quote
      type: object
      title: Create FX Quote Request
      properties:
        product:
          enum: [OUTGOING_WIRE, INCOMING_WIRE]
          description: FXellence product code for outgoing or incoming wire transfers
        sellCurrency:
          type: string
          description: ISO code for buy currency
        buyCurrency:
          type: string
          description: ISO code for sell currency
        fixedSide:
          enum: [buy, sell]
          description: Providing whether to convert into buy currency or sell currency
        amount:
          type: number
          description: Amount to be converted
        deliveryDate:
          type: string
          description: Earliest delivery date in UTC time zone. Format YYYY-MM-DD.
        uniqueRequestId:
          type: string
          description: User-generated idempotence key. Beneficial for request tracking / management.
        market:
          enum: [uk]
          description: FXellence market of operations
      required:
        - buyCurrency
        - sellCurrency
        - fixedSide
        - amount
        - uniqueRequestId
        - market
    Conversion:
      description: Rate conversion response details
      type: object
      title: Rate Conversion Response
      properties:
        id:
          type: string
          description: Rate conversion UUID
        settlement_date:
          type: string
          description: The date and time by which funds need to be available to settle the trade.
        conversion_date:
          type: string
          description: The date the rate conversion will be made.
        currency_pair:
          type: string
          description: Concatenated string of the two currencies traded, eg. "USDEUR".
        status:
          type: string
          description: Current rate conversion status.
        buy_currency:
          type: string
          description: Three character ISO code for the currency being bought.
        sell_currency:
          type: string
          description: Three character ISO code for the currency being sold.
        client_buy_amount:
          type: string
          description: The amount of buy currency for a client.
        client_sell_amount:
          type: string
          description: The amount of sell currency for a client.
        fixed_side:
          enum: [buy, sell]
          description: Which currency side is fixed - the buy or sell one.
        core_rate:
          type: string
          description: The market rate.
        client_rate:
          type: string
          description: The rate that will be returned to your customer after all spread has been applied.
        mid_market_rate:
          type:
          description: The midpoint between the buy and sell rates.
    RateAlert:
      description: Rate alert for an fx-user
      type: object
      title: Rate Alerts
      properties:
        alert_id:
          type: string
          description: rate alert unique id
        currency_pair:
          type: string
          description: from and to currency pair
        frequency:
          enum: [daily, weekly]
          description: Alert will be sent either Daily or weekly
        start_datetime:
          type: string
          description: when alert was first started
        end_datetime:
          type: string
          description: when last alert will be sent before it will be disabled
        target_rate:
          type: number
          description: trigger will be fired when the current rate will be greater than target_rate
        alert_name:
          type: string
          description: unique name of the rate alert
        delivery_method:
          enum: [email, sms]
          description: alert will be either sent to email or SMS
        status:
          type: string
          description: Rate alert current status (Created, Active, Disabled, Deleted)
    RateAlertCreateReq:
      description: Create rate alert for an fx-user
      type: object
      title: Create rate alert request
      properties:
        fx_user_id:
          type: string
          description: fx user who is creating rate alert
        currency_pair:
          type: string
          description: from and to currency pair
        frequency:
          enum: [daily, weekly]
          description: Alert will be sent either Daily or weekly
        target_rate:
          type: number
          description: trigger will be fired when the current rate will be greater than target_rate
        alert_name:
          type: string
          description: unique name of the rate alert
        delivery_method:
          enum: [email, sms]
          description: alert will be either sent to email or SMS
      required:
        - fx_user_id
        - currency_pair
        - frequency
        - alert_name
        - delivery_method
    RateAlertCreateRes:
      description: Response object for create rate alert
      type: object
      title: Create rate alert response
      properties:
        alert_id:
          type: string
          description: rate alert unique id
        status:
          type: string
          description: Rate alert current status (Created, Active, Disabled, Deleted)
    RateAlertUpdateReq:
      description: Update rate alert for an fx-user
      type: object
      title: Update rate alert request
      properties:
        alert_id:
          type: string
          description: rate alert unique id
        fx_user_id:
          type: string
          description: fx user who is creating rate alert
        currency_pair:
          type: string
          description: from and to currency pair
        frequency:
          enum: [daily, weekly]
          description: Alert will be sent either Daily or weekly
        target_rate:
          type: number
          description: trigger will be fired when the current rate will be greater than target_rate
        alert_name:
          type: string
          description: unique name of the rate alert
        delivery_method:
          enum: [email, sms]
          description: alert will be either sent to email or SMS
        status:
          type: string
          description: Rate alert current status (Created, Active, Disabled, Deleted)
      required:
        - alert_id
        - fx_user_id

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "Fxellence APIs are protected using OAuth2 JWT bearer token, User will have to authenticate using their credentials to get the valid token that will be passed as a Authorization token in all protected APIs. APIs will then call IdP provider token validation endpoint to validate the token and based on the outcome, it will process the request.\n\nTo generate the API token without having to use user credentials, you can use Machine-to-Machine credentials (Please contact support to generate M2M credentials for you).\n\nYou need the following values to generate the auth token:\nclient_id\nclient_secret\naudience\ngrant_type\n\nOnce you have all of these details, you can then submit a POST request to the following URL to get the auth token:\n\nhttps://fxellence.eu.auth0.com/oauth/token\n\nThis will return a Bearer token with expiry time which can be use for all FXellence protected APIs"

  responses:
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            title: Error
            type: object
            description: A standard error object.
            x-tags:
              - Common
            properties:
              status:
                type: string
                description: A code.
              error:
                type: string
            required:
              - status
              - error
    Unauthorized:
      description: Unauthorized Access
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
    BadRequest:
      description: The client sent a request with incorrect syntax or missing required parameters.
      content:
        application/json:
          schema:
            type: object
            properties:
              timestamp:
                type: string
                description: date and time when request was received by the backend services.
              status:
                type: number
                description: HTTP error code, for example 400
              error:
                type: string
                description: HTTP error message, for example BAD_REQUEST
              message:
                type: string
                description: more detailed level application error messages
              errors:
                type: array
                description: multiple validation errors
              errorKey:
                type: string
                description: error key map error messages to particular validation workflow, for example UNIQUE_REQUEST_ID_ERROR, show that the request id used in the request is not unique.
              path:
                type: string
                description: shows validation error on the field if the information is available
  examples:
    currency:
      value:
        - code: GBP,
          name: British Pound Sterling,
          name_plural: British pounds sterling,
          symbol: £,
          symbol_native": £,
          decimal_digits: 2,
          rounding": 0,
          country_code: GB,
          country_name: United Kingdom,
          base_currency_flag: false,
          active_currency_flag: true,
          top_currency_flag: false
        - code: USD,
          name: US Dollar,
          name_plural: US dollars,
          symbol: $,
          symbol_native: $,
          decimal_digits: 2,
          rounding: 0,
          country_code: US,
          country_name: United States,
          base_currency_flag: false,
          active_currency_flag: true,
          top_currency_flag: false
    rate:
      value:
        result: success,
        time_last_update_utc: Wed, 19 Jul 2023 00:00:01 +0000,
        base_code: GBP
        conversion_rates:
          USD: 1.3055,
          EUR: 1.1626,
          FJD: 2.8727,
          MXN: 21.8597,
          SCR: 17.4269,
          TVD: 1.9163,
          CDF: 3258.5285,
          BBD: 2.6117,
          GTQ: 10.2683,
          CLP: '1071.1356'
    CreateFxQuoteExample:
      value:
        product: 'OUTGOING_WIRE'
        buyCurrency: EUR,
        sellCurrency: GBP,
        fixedSide: sell,
        amount: 10000,
        market: 'UK'
    Conversion:
      value:
        conversion_id: 65bdeb4f-fed7-447b-9f99-7c7863e92db1,
        settlement_date: 2023-07-18T13:30:00.000+00:00,
        conversion_date: 2023-07-18T00:00:00.000+00:00,
        status: created,
        currency_pair: EURGBP,
        buy_currency: EUR,
        sell_currency: GBP,
        fixed_side: sell,
        client_buy_amount: 12411.57,
        client_sell_amount: 10000.00,
        mid_market_rate: 0.8056,
        core_rate: 0.8057,
        client_rate: '0.8057'
    ListRateAlert:
      value:
        - alert_id: 23jr237hkb237r273
          currency_pair: GBPEUR
          fx_user_id: dasd76a7sd6ad7qg7
          frequency: Weekly
          email: test_user@example.com
          start_datetime: 07/08/2023
          end_datetime: 31/08/2023
          target_rate: 1.21
          alert_name: TestAlert001
          status: active
        - alert_id: jkshd723bb8
          currency_pair: GBPINR
          fx_user_id: dasd76a7sd6ad7qg7
          frequency: Daily
          email: user001@example.com
          start_datetime: 07/08/2023
          end_datetime: 31/08/2023
          target_rate: 1.21
          alert_name: TestAlert002
          status: disabled
    RateAlert:
      value:
        alert_id: 23jr237hkb237r273
        currency_pair: GBPEUR
        fx_user_id: dasd76a7sd6ad7qg7
        frequency: Weekly
        email: test_user@example.com
        start_datetime: 07/08/2023
        end_datetime: 31/08/2023
        target_rate: 1.21
        alert_name: TestAlert001
        status: active
    RateAlertCreateReqExample:
      value:
        currency_pair: GBPEUR
        fx_user_id: dasd76a7sd6ad7qg7
        frequency: Weekly,
        target_rate: 1.21,
        alert_name: TestAlert001
    RateAlertCreateResExample:
      value:
        alert_id: 23jr237hkb237r273
        status: Active
    RateAlertUpdateReqExample:
      value:
        alert_id: 23jr237hkb237r273
        currency_pair: GBPEUR
        fx_user_id: dasd76a7sd6ad7qg7
        frequency: Weekly,
        target_rate: 1.21,
        alert_name: TestAlert001
        status: disabled
    BadRequestExample:
      value:
        timestamp: 2024-02-12T08:43:38.427+00:00
        status: 400,
        error: BAD_REQUEST
        message: Please provide the unique request id.
        errors: []
        errorKey: UNIQUE_REQUEST_ID_ERROR
        path: /fx_quote/v2/api/quote/create
security:
  - bearerAuth: []

tags:
  - name: fxellence
